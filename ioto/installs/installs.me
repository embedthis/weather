/*
    package.me - MakeMe for Ioto package targets
 */

Me.load({
    scripts: {
        loaded: `
            let s = me.settings
            if (makeme.generating) {
                s.webUser = '$(WEB_USER)'
                s.webGroup = '$(WEB_GROUP)'
            } else {
                let os = me.platform.os
                s.webUser = {macosx: '_www', windows: 'Administrator', linux: 'nobody', freebsd: 'nobody'}[os]
                s.webGroup = {macosx: '_www', windows: 'Administrator', linux: 'nogroup', freebsd: 'nogroup'}[os]
                s.webUser ||= ''
                s.webGroup ||= ''
            }
        `,
        gencustom: `
            if (me.platform.os != 'windows') {
                genWriteLine(\"WEB_USER              ?= $(shell egrep 'www-data|_www|nobody' /etc/passwd | sed 's^:.*^^' |  tail -1)\")
                genWriteLine(\"WEB_GROUP             ?= $(shell egrep 'www-data|_www|nobody|nogroup' /etc/group | sed 's^:.*^^' |  tail -1)\")
            }
        `,
    },

    targets: {
        install: {
            home: '${TOP}',
            depends: [ 'all', 'stop', 'installBinary', 'start' ],
            generate: true,
            action: `
                trace('Info', me.settings.title + ' installed at ' + me.prefixes.vapp)
                trace('Info', 'Configuration directory ' + me.prefixes.etc)
                trace('Info', 'Documents directory ' + me.prefixes.web)
                trace('Info', 'Executables directory ' + me.prefixes.vapp.join('bin'))
                trace('Info', 'Use "man ioto" for usage')
                trace('Info', 'Run via "cd ' + me.prefixes.etc + ' ; sudo ioto"')
                run('bin/json profile=prod /etc/ioto/ioto.json5')
                run('mkdir -p /var/lib/ioto/db')
            `,
            generate: `
                echo "      [Info] Ioto installed at ${vapp}"
                echo "      [Info] Configuration directory ${etc}"
                echo "      [Info] Documents directory ${web}"
                echo "      [Info] Executables directory ${abin}"
                echo '      [Info] Use "man ioto" for usage'
                echo "      [Info] Run via 'cd ${etc} ; sudo ioto'"
                bin/json profile=prod /etc/ioto/ioto.json5
            `,
        },

        uninstall: {
            depends: [ 'build', 'stop' ],
            action: `
                removeFile(me.prefixes.etc.join('appweb.conf'))
                removeFile(me.prefixes.etc.join('esp.conf'))
                removeFile(me.prefixes.etc.join('mine.types'))
                removeFile(me.prefixes.etc.join('install.conf'))
                removeDir(me.prefixes.inc.join(me.settings.name))
            `,
            generate: true,
        },
    }
})
